CREATE DATABASE clubhub;

USE clubhub;

CREATE TABLE User (
    UID INT PRIMARY KEY AUTO_INCREMENT,
    username VARCHAR(255) NOT NULL UNIQUE,
    fname VARCHAR(255) NOT NULL,
    lname VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL UNIQUE,
    password CHAR(60) NOT NULL,
    bio TEXT,
    major VARCHAR(255),
    gradYear INT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE INDEX UID_IDX on User (UID);

CREATE TABLE Club (
    CID INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(255) NOT NULL UNIQUE,
    description TEXT
);

CREATE INDEX CID_IDX on Club (CID);

CREATE TABLE Event (
    EID INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(255) NOT NULL,
    date DATE NOT NULL,
    street VARCHAR(255),
    city VARCHAR(255),
    zipcode INT,
    `limit` INT,
    CID INT,
    FOREIGN KEY (CID) REFERENCES Club(CID) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE INDEX EID_IDX on Event (EID);

CREATE TABLE EventRegistration (
    UID INT,
    EID INT,
    date DATE NOT NULL,
    PRIMARY KEY (UID, EID),
    FOREIGN KEY (UID) REFERENCES User(UID) ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY (EID) REFERENCES Event(EID) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE INDEX EID_IDX on EventRegistration (EID);
CREATE INDEX UID_IDX on EventRegistration (UID);

CREATE TABLE Post (
    PID INT PRIMARY KEY AUTO_INCREMENT,
    UID INT,
    mediaURL VARCHAR(255),
    caption TEXT,
    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CID INT,
    FOREIGN KEY (CID) REFERENCES Club(CID) ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY (UID) REFERENCES User(UID) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE INDEX PID_IDX on Post (PID);

CREATE TABLE Comment (
    CoID INT PRIMARY KEY AUTO_INCREMENT,
    PID INT,
    UID INT,
    content TEXT,
    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (PID) REFERENCES Post(PID) ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY (UID) REFERENCES User(UID) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE INDEX CoID_IDX on Comment (CoID);

CREATE TABLE ChatRoom (
    CRID INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(255),
    CID INT,
    FOREIGN KEY (CID) REFERENCES Club(CID) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE INDEX CRID_IDX on ChatRoom (CRID);

CREATE TABLE Message (
    MID INT PRIMARY KEY AUTO_INCREMENT,
    CRID INT,
    reply_to INT,
    message TEXT,
    UID INT,
    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (CRID) REFERENCES ChatRoom(CRID) ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY (UID) REFERENCES User(UID) ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY (reply_to) REFERENCES Message(MID) ON UPDATE CASCADE ON DELETE SET NULL
);

CREATE INDEX MID_IDX on Message (MID);

CREATE TABLE Thread (
    TID INT PRIMARY KEY AUTO_INCREMENT,
    UID INT,
    title VARCHAR(255),
    category VARCHAR(255),
    content TEXT,
    CID INT,
    FOREIGN KEY (CID) REFERENCES Club(CID) ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY (UID) REFERENCES User(UID) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE INDEX TID_IDX on Thread (TID);

CREATE TABLE ThreadReply (
    TRID INT PRIMARY KEY AUTO_INCREMENT,
    TID INT,
    UID INT,
    content TEXT,
    parent_reply INT,
    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (TID) REFERENCES Thread(TID) ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY (UID) REFERENCES User(UID) ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY (parent_reply) REFERENCES ThreadReply(TRID) ON UPDATE CASCADE ON DELETE SET NULL
);

CREATE INDEX TRID_IDX on ThreadReply (TRID);

CREATE TABLE Role (
    RID INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(255) NOT NULL
);

CREATE INDEX RID_IDX on Role (RID);

CREATE TABLE ClubProfile (
    UID INT,
    RID INT,
    CID INT,
    nickname VARCHAR(255),
    joined TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (UID, RID, CID),
    FOREIGN KEY (RID) REFERENCES Role(RID) ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY (UID) REFERENCES User(UID) ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY (CID) REFERENCES Club(CID) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE INDEX UID_IDX on ClubProfile (UID);

INSERT INTO Role (name)  VALUES ('Owner'), ('Member');